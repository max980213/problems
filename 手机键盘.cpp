/*
按照手机键盘输入字母的方式，计算所花费的时间 如：a,b,c都在“1”键上，输入a只需要按一次，输入c需要连续按三次。 
如果连续两个字符不在同一个按键上，则可直接按，如：ad需要按两下，kz需要按6下
如果连续两字符在同一个按键上，则两个按键之间需要等一段时间，如ac，在按了a之后，需要等一会儿才能按c。
现在假设每按一次需要花费一个时间段，等待时间需要花费两个时间段。 现在给出一串字符，需要计算出它所需要花费的时间。
*/



//用key顺序记录26个字母按键次数，
//然后判断两个字母是否在同一个按键上，如果在同一个按键上，那么下标差（字母间距）
//就等于按键次数差。

#include<iostream>
#include<string>

using namespace std;

int main()
{
    int key[26] = {1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,4};
    //记下按键次数
    string str;
    cin>>str;
    int ans=key[str[0]-'a'];
    for(int i=1;i<str.size();i++)
    {
        ans+=key[str[i]-'a'];
        if(str[i]-str[i-1]==key[str[i]-'a']-key[str[i-1]-'a'])
            ans+=2;
    }
    cout<<ans;
    return 0;
}
