/*
题目描述
NowCoder小时候走路喜欢蹦蹦跳跳，他最喜欢在楼梯上跳来跳去。
 但年幼的他一次只能走上一阶或者一下子蹦上两阶。
 现在一共有N阶台阶，请你计算一下NowCoder从第0阶到第N阶共有几种走法。

输入描述:
输入包括多组数据。每组数据包括一个整数n, (1≤n≤90)。


输出描述:
对应每个输入包括一个输出。
为redraiment到达第n阶不同走法的数量。
*/


//类完全背包问题
//考虑动态规划或DFS

//递归DFS会超时
////动态规划的话，实际上就是斐波那契数列
//为什么呢？因为第一步可选1或2步
//若选择1，那么剩下的就是i-1步，则有dp[i-1]种可能
//同理若选择2

//不仅要学算法，更要有与实际结合的能力

#include <stdio.h>

int main()
{
    long long int dp[91];
    dp[0]=dp[1]=1;
    for(int i=2;i<91;i++)
    {
        dp[i]=dp[i-1]+dp[i-2];
    }
    int n;
    while(scanf("%d",&n)!=EOF)
    {
        printf("%lld\n",dp[n]);
    }
    return 0;
}
